<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.happyhouse.model.mapper.UserMapper">
	
	
	<insert id="registUser" parameterType="UserDto">
		insert into user (userid, userpw, username, useraddress, usernumber, usertype)
		values (#{userid}, #{userpw}, #{username}, #{useraddress}, #{usernumber} ,"G")
	</insert>
	<!-- 
	<insert id="registAdmin" parameterType="UserDto">
		insert into user (userid, userpw, username, useraddress, usernumber, usertype)
		values (#{userid}, #{userpw}, #{username}, #{useraddress}, #{usernumber} ,"A")
	</insert>
	 -->
	
	<update id="gradeAdmin" parameterType="map">
	update user 
	set usertype=#{type} 
	where userid=#{userid}; 
	</update>	
	
	
	<select id="idFind" parameterType="map" resultType="string">
		select userid
		from user
		where username = #{username} and useraddress = #{useraddress} and usernumber = #{usernumber}
	</select>
	
	<select id="pwFind" parameterType="map" resultType="UserDto">
		select *
		from user
		where username = #{username} and userid=#{userid} and useraddress = #{useraddress} and usernumber = #{usernumber}
	</select>
	
	<select id="selectId" parameterType="string" resultType="string">
		select userpw
		from user
		where userid = #{userid}
	</select>
	<select id="idCheck" parameterType="string" resultType="int">
		select count(*)
		from user
		where userid = #{userid}
	</select>
	
	<select id="login" parameterType="map" resultType="UserDto">
		select *
		from user
		where userid = #{userid} and userpw = #{userpw}
	</select>
	
	<select id="listUser" resultType="UserDto">
		select *
		from user
		order by userid desc;
	</select>
	
	<select id="detailUser" parameterType="String" resultType="UserDto">
		select *
		from user
		where userid = #{userid};
	</select>

	<update id="updateUser" parameterType="UserDto" >
      update user
      <trim prefix="set" suffixOverrides=",">
         <if test="userpw != null">userpw = #{userpw},</if>
         <if test="useraddress != null">useraddress = #{useraddress},</if>
         <if test="useraddress != null">usernumber = #{usernumber},</if>
      </trim>
      where userid = #{userid}
   </update>
   
   <update id="updateAdmin" parameterType="UserDto" >
      update user
      <trim prefix="set" suffixOverrides=",">
         <if test="useraddress != null">useraddress = #{useraddress},</if>
         <if test="useraddress != null">usernumber = #{usernumber},</if>
      </trim>
      where userid = #{userid}
   </update>
	
	<delete id="deleteUser" parameterType="String">
		delete from user
		where userid = #{userid}
	</delete>
	
	
		<!-- 관심지역 등록하기 -->
	<insert id="addLikeDong" parameterType="map">
		insert into likedong(userid, dongCode)
		values(#{userid},#{dongCode})	
	</insert>
	
	<!-- 관심지역 해제하기 -->
	<delete id="deleteLikeDong" parameterType="map">
		delete 
		from likedong 
		where userid=#{userid} and dongcode=#{dongCode}
	</delete>
	
	<!-- 유저이름으로 관심지역 조회 -->
	<select id="listLikeDong" parameterType="map" resultType="SidoGugunCodeDto">
	select  s.sidocode, s.sidoName,  g.guguncode, g.gugunName,d.dongcode, d.dongname
	from likedong l
	left join dongcode d
	on l.dongcode=d.dongcode
	left join guguncode g
	on left(d.dongCode,5) = left(g.gugunCode,5)
    left join sidocode s
	on left(d.dongCode,2) = left(s.sidoCode,2)
	where userid=#{userid}
	</select>
	
</mapper>